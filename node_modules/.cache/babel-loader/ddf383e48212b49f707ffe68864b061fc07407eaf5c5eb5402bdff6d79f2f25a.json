{"ast":null,"code":"import { combineReducers, createStore } from \"redux\";\nconst rootReducer = combineReducers({\n  accountReducer,\n  customerReducer\n});\nconst store = createStore(rootReducer);\nconst initialStateCustomer = {\n  fullName: \"\",\n  nationalID: \"\",\n  createdAt: \"\"\n};\nfunction customerReducer(state = initialStateCustomer, action) {\n  switch (action.type) {\n    case \"customer/createCustomer\":\n      return {\n        ...state,\n        fullName: action.payload.fullName,\n        nationalID: action.payload.nationalID,\n        createdAt: action.payload.createdAt\n      };\n    case \"customer/updateName\":\n      return {\n        ...state,\n        fullName: action.payload\n      };\n    default:\n      return state;\n  }\n}\nfunction createCustomer(fullName, nationalID) {\n  return {\n    type: \"customer/createCustomer\",\n    payload: {\n      fullName,\n      nationalID,\n      createdAt: new Date().toLocaleString(\"en-GB\", {\n        timeZone: 'IST'\n      })\n    }\n  };\n}\nfunction updateName(fullName) {\n  return {\n    type: \"customer/updateName\",\n    payload: {\n      fullName\n    }\n  };\n}","map":{"version":3,"names":["combineReducers","createStore","rootReducer","accountReducer","customerReducer","store","initialStateCustomer","fullName","nationalID","createdAt","state","action","type","payload","createCustomer","Date","toLocaleString","timeZone","updateName"],"sources":["/Users/khushbu.vaghela/Documents/GitHub/K-15-redux-intro/src/store.js"],"sourcesContent":["import { combineReducers, createStore } from \"redux\";\n\nconst rootReducer = combineReducers({\n  accountReducer,\n  customerReducer,\n});\n\nconst store = createStore(rootReducer);\nconst initialStateCustomer = {\n  fullName: \"\",\n  nationalID: \"\",\n  createdAt: \"\",\n};\n\nfunction customerReducer(state = initialStateCustomer, action) {\n  switch (action.type) {\n    case \"customer/createCustomer\":\n      return {\n        ...state,\n        fullName: action.payload.fullName,\n        nationalID: action.payload.nationalID,\n        createdAt: action.payload.createdAt,\n      };\n    case \"customer/updateName\":\n      return {\n        ...state,\n        fullName: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\n\n\nfunction createCustomer(fullName, nationalID) {\n  return {\n    type: \"customer/createCustomer\",\n    payload: { fullName, nationalID, createdAt: new Date().toLocaleString(\"en-GB\",{timeZone: 'IST'}) },\n  };\n}\nfunction updateName(fullName) {\n  return {\n    type: \"customer/updateName\",\n    payload: { fullName },\n  };\n}"],"mappings":"AAAA,SAASA,eAAe,EAAEC,WAAW,QAAQ,OAAO;AAEpD,MAAMC,WAAW,GAAGF,eAAe,CAAC;EAClCG,cAAc;EACdC;AACF,CAAC,CAAC;AAEF,MAAMC,KAAK,GAAGJ,WAAW,CAACC,WAAW,CAAC;AACtC,MAAMI,oBAAoB,GAAG;EAC3BC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE;AACb,CAAC;AAED,SAASL,eAAeA,CAACM,KAAK,GAAGJ,oBAAoB,EAAEK,MAAM,EAAE;EAC7D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,yBAAyB;MAC5B,OAAO;QACL,GAAGF,KAAK;QACRH,QAAQ,EAAEI,MAAM,CAACE,OAAO,CAACN,QAAQ;QACjCC,UAAU,EAAEG,MAAM,CAACE,OAAO,CAACL,UAAU;QACrCC,SAAS,EAAEE,MAAM,CAACE,OAAO,CAACJ;MAC5B,CAAC;IACH,KAAK,qBAAqB;MACxB,OAAO;QACL,GAAGC,KAAK;QACRH,QAAQ,EAAEI,MAAM,CAACE;MACnB,CAAC;IACH;MACE,OAAOH,KAAK;EAChB;AACF;AAIA,SAASI,cAAcA,CAACP,QAAQ,EAAEC,UAAU,EAAE;EAC5C,OAAO;IACLI,IAAI,EAAE,yBAAyB;IAC/BC,OAAO,EAAE;MAAEN,QAAQ;MAAEC,UAAU;MAAEC,SAAS,EAAE,IAAIM,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,OAAO,EAAC;QAACC,QAAQ,EAAE;MAAK,CAAC;IAAE;EACnG,CAAC;AACH;AACA,SAASC,UAAUA,CAACX,QAAQ,EAAE;EAC5B,OAAO;IACLK,IAAI,EAAE,qBAAqB;IAC3BC,OAAO,EAAE;MAAEN;IAAS;EACtB,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}