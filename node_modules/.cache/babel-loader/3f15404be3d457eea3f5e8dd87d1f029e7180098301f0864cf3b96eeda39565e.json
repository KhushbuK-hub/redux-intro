{"ast":null,"code":"import { combineReducers, createStore } from \"redux\";\nconst initialStateAccount = {\n  balance: 0,\n  loan: 0,\n  loanPurpose: \"\"\n};\nconst initialStateCustomer = {\n  fullName: \"\",\n  nationalID: \"\",\n  createdAt: \"\"\n};\nfunction accountReducer(state = initialStateAccount, action) {\n  switch (action.type) {\n    case \"account/deposit\":\n      return {\n        ...state,\n        balance: state.balance + action.payload\n      };\n    case \"account/withdraw\":\n      return {\n        ...state,\n        balance: state.balance - action.payload\n      };\n    case \"account/requestLoan\":\n      if (state.loan > 0) return state;\n      return {\n        ...state,\n        loan: action.payload.amount,\n        balance: state.balance + action.payload.amount,\n        loanPurpose: action.payload.purpose\n      };\n    case \"account/payLoan\":\n      return {\n        ...state,\n        loan: 0,\n        loanPurpose: \"\",\n        balance: state.balance - state.loan\n      };\n    default:\n      return state;\n  }\n}\nfunction customerReducer(state = initialStateCustomer, action) {\n  switch (action.type) {\n    case \"customer/createCustomer\":\n      return {\n        ...state,\n        fullName: action.payload.fullName,\n        nationalID: action.payload.nationalID,\n        createdAt: action.payload.createdAt\n      };\n    case \"customer/updateName\":\n      return {\n        ...state,\n        fullName: action.payload\n      };\n    default:\n      return state;\n  }\n}\nconst rootReducer = combineReducers({\n  accountReducer,\n  customerReducer\n});\nconst store = createStore(rootReducer);\n\n// store.dispatch({ type: \"account/deposit\", payload: 2000 });\n// console.log(store.getState());\n// store.dispatch({ type: \"account/withdraw\", payload: 500 });\n// console.log(store.getState());\n// store.dispatch({\n//   type: \"account/requestLoan\",\n//   payload: { amount: 1500, purpose: \"hair dyer\" },\n// });\n// console.log(store.getState());\n// store.dispatch({ type: \"account/payLoan\" });\n// console.log(store.getState());\n\nconst deposit = amount => {\n  return {\n    type: \"account/deposit\",\n    payload: amount\n  };\n};\nconst withdraw = amount => {\n  return {\n    type: \"account/withdraw\",\n    payload: amount\n  };\n};\nconst requestLoan = (amount, purpose) => {\n  return {\n    type: \"account/requestLoan\",\n    payload: {\n      amount: amount,\n      purpose: purpose\n    }\n  };\n};\nconst payLoan = () => {\n  return {\n    type: \"account/payLoan\"\n  };\n};\nstore.dispatch(deposit(2000));\nconsole.log(store.getState());\nstore.dispatch(withdraw(500));\nconsole.log(store.getState());\nstore.dispatch(requestLoan(500, \"hair dyer\"));\nconsole.log(store.getState());\nstore.dispatch(payLoan());\nconsole.log(store.getState());\nfunction createCustomer(fullName, nationalID) {\n  return {\n    type: \"customer/createCustomer\",\n    payload: {\n      fullName,\n      nationalID,\n      createdAt: new Date().toLocaleString(\"en-GB\", {\n        timeZone: 'IST'\n      })\n    }\n  };\n}\nfunction updateName(fullName) {\n  return {\n    type: \"customer/updateName\",\n    payload: {\n      fullName\n    }\n  };\n}\nstore.dispatch(createCustomer(\"Khushbu\", \"20091991\"));\nconsole.log(store.getState());","map":{"version":3,"names":["combineReducers","createStore","initialStateAccount","balance","loan","loanPurpose","initialStateCustomer","fullName","nationalID","createdAt","accountReducer","state","action","type","payload","amount","purpose","customerReducer","rootReducer","store","deposit","withdraw","requestLoan","payLoan","dispatch","console","log","getState","createCustomer","Date","toLocaleString","timeZone","updateName"],"sources":["/Users/khushbu.vaghela/Documents/GitHub/K-15-redux-intro/src/store.js"],"sourcesContent":["import { combineReducers, createStore } from \"redux\";\nconst initialStateAccount = {\n  balance: 0,\n  loan: 0,\n  loanPurpose: \"\",\n};\nconst initialStateCustomer = {\n  fullName: \"\",\n  nationalID: \"\",\n  createdAt: \"\",\n};\n\nfunction accountReducer(state = initialStateAccount, action) {\n  switch (action.type) {\n    case \"account/deposit\":\n      return { ...state, balance: state.balance + action.payload };\n    case \"account/withdraw\":\n      return { ...state, balance: state.balance - action.payload };\n    case \"account/requestLoan\":\n      if (state.loan > 0) return state;\n      return {\n        ...state,\n        loan: action.payload.amount,\n        balance: state.balance + action.payload.amount,\n        loanPurpose: action.payload.purpose,\n      };\n    case \"account/payLoan\":\n      return {\n        ...state,\n        loan: 0,\n        loanPurpose: \"\",\n        balance: state.balance - state.loan,\n      };\n    default:\n      return state;\n  }\n}\nfunction customerReducer(state = initialStateCustomer, action) {\n  switch (action.type) {\n    case \"customer/createCustomer\":\n      return {\n        ...state,\n        fullName: action.payload.fullName,\n        nationalID: action.payload.nationalID,\n        createdAt: action.payload.createdAt,\n      };\n    case \"customer/updateName\":\n      return {\n        ...state,\n        fullName: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  accountReducer,\n  customerReducer,\n});\n\nconst store = createStore(rootReducer);\n\n// store.dispatch({ type: \"account/deposit\", payload: 2000 });\n// console.log(store.getState());\n// store.dispatch({ type: \"account/withdraw\", payload: 500 });\n// console.log(store.getState());\n// store.dispatch({\n//   type: \"account/requestLoan\",\n//   payload: { amount: 1500, purpose: \"hair dyer\" },\n// });\n// console.log(store.getState());\n// store.dispatch({ type: \"account/payLoan\" });\n// console.log(store.getState());\n\nconst deposit = (amount) => {\n  return { type: \"account/deposit\", payload: amount };\n};\nconst withdraw = (amount) => {\n  return { type: \"account/withdraw\", payload: amount };\n};\nconst requestLoan = (amount, purpose) => {\n  return {\n    type: \"account/requestLoan\",\n    payload: { amount: amount, purpose: purpose },\n  };\n};\nconst payLoan = () => {\n  return { type: \"account/payLoan\" };\n};\n\nstore.dispatch(deposit(2000));\nconsole.log(store.getState());\nstore.dispatch(withdraw(500));\nconsole.log(store.getState());\nstore.dispatch(requestLoan(500, \"hair dyer\"));\nconsole.log(store.getState());\nstore.dispatch(payLoan());\nconsole.log(store.getState());\n\nfunction createCustomer(fullName, nationalID) {\n  return {\n    type: \"customer/createCustomer\",\n    payload: { fullName, nationalID, createdAt: new Date().toLocaleString(\"en-GB\",{timeZone: 'IST'}) },\n  };\n}\nfunction updateName(fullName) {\n  return {\n    type: \"customer/updateName\",\n    payload: { fullName },\n  };\n}\n\nstore.dispatch(createCustomer(\"Khushbu\", \"20091991\"))\nconsole.log(store.getState())"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}